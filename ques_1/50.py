# -*- coding: utf-8 -*-
"""50.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13YIsuXHIAOfa8VhAnBbnHCdN_NL4gy_U
"""

import numpy as np
import pandas as pd
import glob

from google.colab import drive
drive.mount('/content/drive')

file_folder = r"hindi.txt"
file =  open(file_folder,"rb")
tex = file.read()

terms[0]

terms = []
truth =[]
for word in tex.decode(errors = 'replace').split('\n'):
  temp = []
  word = word.split(",")
  temp.append(word[0])
  temp.append(word[1])
  terms.append(temp)
  truth.append(word[2].split('\r')[0])

truth

"""**bGLOV**"""

import pandas as pd
df = pd.read_csv(r"hi/50/glove/hi-d50-glove.txt",sep = " ",encoding = "utf-8",encoding_errors = 'ignore',header = None)

glov_50_acc  = []
for word in tex.decode(errors = 'replace').split('\n'):
    word = word.split(",")

    a_word = word[0]
    temp = df[df.iloc[:,0] == a_word]
    
    aa = temp.iloc[:,[i for i in range(1,51)]]
    
    aa= aa.T
    aa = list(aa.iloc[:,0])
    b_word =  word[1]
    temp = df[df.iloc[:,0] == b_word]
    bb = temp.iloc[:,[i for i in range(1,51)]]
    bb = bb.T
    bb = list(bb.iloc[:,0])
    a = np.sum(np.dot(aa,bb))
    b = 0 
    for i in range(len(aa)):
      b = b + aa[i]*aa[i]
    b = b**.5
    c = 0
    for i in range(len(bb)):
      c = c + bb[i]*bb[i]
    c = c**.5
    x = a/(b*c)
    print(x)
    glov_50_acc.append(x)

glov_50_acc

#import pickle
#with open('hi/50/50_glow.pkl','wb') as file:
    #pickle.dump(glov_50_acc,file)
    #file.close()



"""**CBow**"""

from gensim.models import Word2Vec
from gensim.models import FastText
cbow_mod = Word2Vec.load("hi/50/cbow/hi-d50-m2-cbow.model")

cbow_50_acc = []
for i in terms:
    aa = cbow_mod.wv[i[0]]
    bb = cbow_mod.wv[i[1]]
    a = np.sum(np.dot(aa,bb))
    b = 0 
    for i in range(len(aa)):
      b = b + aa[i]*aa[i]
    b = b**.5
    c = 0
    for i in range(len(bb)):
      c = c + bb[i]*bb[i]
    c = c**.5
    x = a/(b*c)
    cbow_50_acc.append(x)

#import pickle
#with open('hi/50/50_cbow.pkl','wb') as file:
    #pickle.dump(cbow_50_acc,file)
    #file.close()



"""sg"""

from gensim.models import Word2Vec
from gensim.models import FastText
sg_mod = Word2Vec.load("hi/50/sg/hi-d50-m2-sg.model")

sg_50_acc = []
for i in terms:
    aa = sg_mod.wv[i[0]]
    bb = sg_mod.wv[i[1]]
    a = np.sum(np.dot(aa,bb))
    b = 0 
    for i in range(len(aa)):
      b = b + aa[i]*aa[i]
    b = b**.5
    c = 0
    for i in range(len(bb)):
      c = c + bb[i]*bb[i]
    c = c**.5
    x = a/(b*c)
    sg_50_acc.append(x)

#import pickle
#with open('/content/drive/MyDrive/50/50_sg.pkl','wb') as file:
    #pickle.dump(sg_50_acc,file)
    #file.close()

"""fasttext"""

from gensim.models import FastText
fast_mod = Word2Vec.load("hi/50/fasttext/hi-d50-m2-fasttext.model")

fast_50_acc = []
for i in terms:
    aa = fast_mod.wv[i[0]]
    bb = fast_mod.wv[i[1]]
    a = np.sum(np.dot(aa,bb))
    b = 0 
    for i in range(len(aa)):
      b = b + aa[i]*aa[i]
    b = b**.5
    c = 0
    for i in range(len(bb)):
      c = c + bb[i]*bb[i]
    c = c**.5
    x = a/(b*c)
    fast_50_acc.append(x)



glov_50_acc[8]

"""Testing

Glov accuracy
"""

import pickle
with open("50_glow.pkl",'rb') as f:
  glov_50_acc = pickle.load(f)
  f.close()

import pandas as pd

glov_50_acc[0]

print('accuracy test for glov')

thre =  [.4,.5,.6,.7,.8]
for i in thre:
  df = pd.DataFrame({'Word1':'','Word2':'','Similarity Score':'','Ground Truth':'','Label':''},index=[0])
  k = 0
  for j in range(len(glov_50_acc)):
     x =0
     if(float(truth[j]) > 10*i):
       if(glov_50_acc[j] > i):
         x =1
         k = k+x
     else:
      if(glov_50_acc[j] <= 10*i):
        x = 1
        k = k+x
     temp = pd.DataFrame({'Word1':terms[j][0],'Word2':terms[j][1],'Similarity Score':glov_50_acc[j]*10,'Ground Truth':truth[j],'Label':x},index =[0])
     df = pd.concat([df,temp],axis = 0)
  k = k /len(truth)
  temp = pd.DataFrame({'Word1':'accuracy','Word2':'','Similarity Score':'','Ground Truth':'','Label':k},index =[0])
  df = pd.concat([df,temp],axis = 0)
  df.to_csv('Q1_glov50_similarity_' + str(i) + '.csv')
  print("accuracy for threshold value" + " " + str(i),k )



"""cbow_acc"""

import pickle
with open("50_cbow.pkl",'rb') as f:
  cbow_50_acc = pickle.load(f)
  f.close()

print('accuracy test for cbow')
thre =  [.4,.5,.6,.7,.8]
for i in thre:
  df = pd.DataFrame({'Word1':'','Word2':'','Similarity Score':'','Ground Truth':'','Label':''},index=[0])
  k = 0
  for j in range(len(cbow_50_acc)):
    if(float(truth[j]) > 10*i):
      if(cbow_50_acc[j] > i):
        x =1
        k = k+x
    else:
      if(cbow_50_acc[j] <= 10*i):
        x =1
        k = k+x
    temp = pd.DataFrame({'Word1':terms[j][0],'Word2':terms[j][1],'Similarity Score':glov_50_acc[j]*10,'Ground Truth':truth[j],'Label':x},index =[0])
    df = pd.concat([df,temp],axis = 0)
  k = k /len(truth)
  temp = pd.DataFrame({'Word1':'accuracy','Word2':'','Similarity Score':'','Ground Truth':'','Label':k},index =[0])
  df = pd.concat([df,temp],axis = 0)
  df.to_csv('Q1_cbow50_similarity_' + str(i) + '.csv')
  print("accuracy for threshold value" + " " + str(i),k )

"""sg accuracy"""

import pickle
with open("50_cbow.pkl",'rb') as f:
  sg_50_acc = pickle.load(f)
  f.close()

print('accuracy test for sg')
thre =  [.4,.5,.6,.7,.8]
for i in thre:
  df = pd.DataFrame({'Word1':'','Word2':'','Similarity Score':'','Ground Truth':'','Label':''},index=[0])
  k = 0
  for j in range(len(sg_50_acc)):
    if(float(truth[j]) > 10*i):
      if(sg_50_acc[j] > i):
        x =1
        k = k+x
    else:
      if(sg_50_acc[j] <= 10*i):
        x =1
        k = k+x
    temp = pd.DataFrame({'Word1':terms[j][0],'Word2':terms[j][1],'Similarity Score':glov_50_acc[j]*10,'Ground Truth':truth[j],'Label':x},index =[0])
    df = pd.concat([df,temp],axis = 0)
  k = k /len(truth)
  temp = pd.DataFrame({'Word1':'accuracy','Word2':'','Similarity Score':'','Ground Truth':'','Label':k},index =[0])
  df = pd.concat([df,temp],axis = 0)
  df.to_csv('Q1_sg50_similarity_' + str(i) + '.csv')
  print("accuracy for threshold value" + " " + str(i),k )

"""fasttext accuracy"""

import pickle
with open("50_fast.pkl",'rb') as f:
  fast_50_acc = pickle.load(f)
  f.close()

print('accuracy test for fasttext')
thre =  [.4,.5,.6,.7,.8]
for i in thre:
  df = pd.DataFrame({'Word1':'','Word2':'','Similarity Score':'','Ground Truth':'','Label':''},index=[0])
  k = 0
  for j in range(len(fast_50_acc)):
    if(float(truth[j]) > 10*i):
      if(fast_50_acc[j] > i):
        x =1
        k = k+x
    else:
      if(fast_50_acc[j] <= 10*i):
        x =1
        k = k+x
    temp = pd.DataFrame({'Word1':terms[j][0],'Word2':terms[j][1],'Similarity Score':glov_50_acc[j]*10,'Ground Truth':truth[j],'Label':x},index =[0])
    df = pd.concat([df,temp],axis = 0)
  k = k /len(truth)
  temp = pd.DataFrame({'Word1':'accuracy','Word2':'','Similarity Score':'','Ground Truth':'','Label':k},index =[0])
  df = pd.concat([df,temp],axis = 0)
  df.to_csv('Q1_fasttext_similarity_' + str(i) + '.csv')
  print("accuracy for threshold value" + " " + str(i),k )